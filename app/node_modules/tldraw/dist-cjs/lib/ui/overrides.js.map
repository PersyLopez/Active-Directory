{
  "version": 3,
  "sources": ["../../../src/lib/ui/overrides.ts"],
  "sourcesContent": ["import { Editor, objectMapEntries, useMaybeEditor, useShallowArrayIdentity } from '@tldraw/editor'\nimport { createContext, useCallback, useContext, useMemo } from 'react'\nimport { PORTRAIT_BREAKPOINT } from './constants'\nimport { ActionsProviderProps, TLUiActionsContextType } from './context/actions'\nimport { useBreakpoint } from './context/breakpoints'\nimport { useDialogs } from './context/dialogs'\nimport { useToasts } from './context/toasts'\nimport { getLocalFiles } from './getLocalFiles'\nimport { useMenuClipboardEvents } from './hooks/useClipboardEvents'\nimport { useCopyAs } from './hooks/useCopyAs'\nimport { useExportAs } from './hooks/useExportAs'\nimport { useGetEmbedDefinition } from './hooks/useGetEmbedDefinition'\nimport { usePrint } from './hooks/usePrint'\nimport { TLUiToolsContextType, TLUiToolsProviderProps } from './hooks/useTools'\nimport { TLUiTranslationProviderProps, useTranslation } from './hooks/useTranslation/useTranslation'\n\nexport const MimeTypeContext = createContext<string[] | undefined>([])\n\n/** @public */\nexport function useDefaultHelpers() {\n\tconst editor = useMaybeEditor()\n\tconst { addToast, removeToast, clearToasts } = useToasts()\n\tconst { addDialog, clearDialogs, removeDialog } = useDialogs()\n\n\tconst msg = useTranslation()\n\tconst printSelectionOrPages = usePrint()\n\tconst { cut, copy, paste } = useMenuClipboardEvents()\n\tconst copyAs = useCopyAs()\n\tconst exportAs = useExportAs()\n\tconst getEmbedDefinition = useGetEmbedDefinition()\n\n\t// This is the only one that will change during runtime\n\tconst breakpoint = useBreakpoint()\n\tconst isMobile = breakpoint < PORTRAIT_BREAKPOINT.TABLET_SM\n\tconst mimeTypes = useShallowArrayIdentity(useContext(MimeTypeContext))\n\n\tconst insertMedia = useCallback(async () => {\n\t\tif (!editor) return\n\t\tconst files = await getLocalFiles({\n\t\t\tallowMultiple: true,\n\t\t\tmimeTypes,\n\t\t})\n\t\tif (!files.length) return\n\t\teditor.markHistoryStoppingPoint('insert media')\n\t\teditor.putExternalContent({\n\t\t\ttype: 'files',\n\t\t\tfiles,\n\t\t\tpoint: editor.getViewportPageBounds().center,\n\t\t})\n\t}, [editor, mimeTypes])\n\n\tconst replaceMedia = useCallback(\n\t\tasync (isImage: boolean) => {\n\t\t\tif (!editor) return\n\t\t\tconst files = await getLocalFiles({\n\t\t\t\tallowMultiple: false,\n\t\t\t\tmimeTypes: mimeTypes?.filter((m) =>\n\t\t\t\t\tisImage ? m.startsWith('image/') : m.startsWith('video/')\n\t\t\t\t),\n\t\t\t})\n\t\t\tif (!files.length) return\n\t\t\tconst shape = editor.getOnlySelectedShape()\n\t\t\tif (!shape || (isImage && shape.type !== 'image') || (!isImage && shape.type !== 'video'))\n\t\t\t\treturn\n\n\t\t\teditor.markHistoryStoppingPoint('replace media')\n\n\t\t\tconst file = files[0]\n\t\t\teditor.replaceExternalContent({\n\t\t\t\ttype: 'file-replace',\n\t\t\t\tfile,\n\t\t\t\tshapeId: shape.id,\n\t\t\t\tisImage,\n\t\t\t})\n\t\t},\n\t\t[editor, mimeTypes]\n\t)\n\n\tconst replaceImage = useCallback(() => replaceMedia(true /* isImage */), [replaceMedia])\n\tconst replaceVideo = useCallback(() => replaceMedia(false /* isImage */), [replaceMedia])\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\taddToast,\n\t\t\tremoveToast,\n\t\t\tclearToasts,\n\t\t\taddDialog,\n\t\t\tremoveDialog,\n\t\t\tclearDialogs,\n\t\t\tmsg,\n\t\t\tisMobile,\n\t\t\tinsertMedia,\n\t\t\treplaceImage,\n\t\t\treplaceVideo,\n\t\t\tprintSelectionOrPages,\n\t\t\tcut,\n\t\t\tcopy,\n\t\t\tpaste,\n\t\t\tcopyAs,\n\t\t\texportAs,\n\t\t\tgetEmbedDefinition,\n\t\t}),\n\t\t[\n\t\t\taddToast,\n\t\t\tremoveToast,\n\t\t\tclearToasts,\n\t\t\taddDialog,\n\t\t\tremoveDialog,\n\t\t\tclearDialogs,\n\t\t\tmsg,\n\t\t\tisMobile,\n\t\t\tinsertMedia,\n\t\t\treplaceImage,\n\t\t\treplaceVideo,\n\t\t\tprintSelectionOrPages,\n\t\t\tcut,\n\t\t\tcopy,\n\t\t\tpaste,\n\t\t\tcopyAs,\n\t\t\texportAs,\n\t\t\tgetEmbedDefinition,\n\t\t]\n\t)\n}\n\n/** @public */\nexport type TLUiOverrideHelpers = ReturnType<typeof useDefaultHelpers>\n\n/** @public */\nexport interface TLUiOverrides {\n\tactions?(\n\t\teditor: Editor,\n\t\tactions: TLUiActionsContextType,\n\t\thelpers: TLUiOverrideHelpers\n\t): TLUiActionsContextType\n\ttools?(\n\t\teditor: Editor,\n\t\ttools: TLUiToolsContextType,\n\t\thelpers: TLUiOverrideHelpers\n\t): TLUiToolsContextType\n\ttranslations?: TLUiTranslationProviderProps['overrides']\n}\n\nexport interface TLUiOverridesWithoutDefaults {\n\tactions?: ActionsProviderProps['overrides']\n\ttools?: TLUiToolsProviderProps['overrides']\n\ttranslations?: TLUiTranslationProviderProps['overrides']\n}\n\nexport function mergeOverrides(\n\toverrides: TLUiOverrides[],\n\tdefaultHelpers: TLUiOverrideHelpers\n): TLUiOverridesWithoutDefaults {\n\tconst mergedTranslations: TLUiTranslationProviderProps['overrides'] = {}\n\tfor (const override of overrides) {\n\t\tif (override.translations) {\n\t\t\tfor (const [key, value] of objectMapEntries(override.translations)) {\n\t\t\t\tlet strings = mergedTranslations[key]\n\t\t\t\tif (!strings) {\n\t\t\t\t\tstrings = mergedTranslations[key] = {}\n\t\t\t\t}\n\t\t\t\tObject.assign(strings, value)\n\t\t\t}\n\t\t}\n\t}\n\treturn {\n\t\tactions: (editor, schema, helpers) => {\n\t\t\tfor (const override of overrides) {\n\t\t\t\tif (override.actions) {\n\t\t\t\t\tschema = override.actions(editor, schema, helpers)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn schema\n\t\t},\n\t\ttools: (editor, schema, helpers) => {\n\t\t\tfor (const override of overrides) {\n\t\t\t\tif (override.tools) {\n\t\t\t\t\tschema = override.tools(editor, schema, { ...defaultHelpers, ...helpers })\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn schema\n\t\t},\n\t\ttranslations: mergedTranslations,\n\t}\n}\n\nfunction useShallowArrayEquality<T extends unknown[]>(array: T): T {\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\treturn useMemo(() => array, array)\n}\n\n/** @internal */\nexport function useMergedTranslationOverrides(\n\toverrides?: TLUiOverrides[] | TLUiOverrides\n): NonNullable<TLUiTranslationProviderProps['overrides']> {\n\tconst overridesArray = useShallowArrayEquality(\n\t\toverrides == null ? [] : Array.isArray(overrides) ? overrides : [overrides]\n\t)\n\treturn useMemo(() => {\n\t\tconst mergedTranslations: TLUiTranslationProviderProps['overrides'] = {}\n\t\tfor (const override of overridesArray) {\n\t\t\tif (override.translations) {\n\t\t\t\tfor (const [key, value] of objectMapEntries(override.translations)) {\n\t\t\t\t\tlet strings = mergedTranslations[key]\n\t\t\t\t\tif (!strings) {\n\t\t\t\t\t\tstrings = mergedTranslations[key] = {}\n\t\t\t\t\t}\n\t\t\t\t\tObject.assign(strings, value)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn mergedTranslations\n\t}, [overridesArray])\n}\n\nexport function useMergedOverrides(\n\toverrides?: TLUiOverrides[] | TLUiOverrides\n): TLUiOverridesWithoutDefaults {\n\tconst defaultHelpers = useDefaultHelpers()\n\tconst overridesArray = useShallowArrayEquality(\n\t\toverrides == null ? [] : Array.isArray(overrides) ? overrides : [overrides]\n\t)\n\treturn useMemo(\n\t\t() => mergeOverrides(overridesArray, defaultHelpers),\n\t\t[overridesArray, defaultHelpers]\n\t)\n}\n"],
  "mappings": "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",
  "names": []
}
